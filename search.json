[{"path":"https://tinashemtapera.github.io/HINF5300/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 HINF5300 authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://tinashemtapera.github.io/HINF5300/articles/assignment1.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Assignment 1: Step Detection","text":"assignment, want use accelerometer data collected iOS devices develop simple step detection algorithm. used DataLogger app access accelerometer sent data automatically laptops. Now, ’ll implement learned class detect steps.","code":""},{"path":"https://tinashemtapera.github.io/HINF5300/articles/assignment1.html","id":"cursory-glance","dir":"Articles","previous_headings":"","what":"Cursory Glance","title":"Assignment 1: Step Detection","text":"data looks like: Let’s check sampling rate: minute 39 just 6000 samples, per minute, comes 100Hz. good sampling rate. Let’s plot full data set:","code":"acc <- read_datalogger_file(system.file(\"extdata\", \"acce.csv\", package = \"HINF5300\")) head(acc) #> # A tibble: 6 × 4 #>   timestamp               X     Y     Z #>   <dttm>              <dbl> <dbl> <dbl> #> 1 2022-09-22 00:38:26 0.736 -3.71 -9.57 #> 2 2022-09-22 00:38:26 0.865 -3.38 -9.50 #> 3 2022-09-22 00:38:26 0.969 -3.04 -9.46 #> 4 2022-09-22 00:38:26 0.875 -3.15 -9.34 #> 5 2022-09-22 00:38:26 0.899 -3.37 -9.24 #> 6 2022-09-22 00:38:26 0.767 -3.53 -9.01 acc %>%   mutate(minute = lubridate::minute(timestamp)) %>%   group_by(minute) %>%   summarise(n()) #> # A tibble: 3 × 2 #>   minute `n()` #>    <int> <int> #> 1     38  3349 #> 2     39  5996 #> 3     40  5834 sampling_rate <- 100 acc %>%   pivot_longer(-timestamp) %>%   ggplot(aes(x=timestamp, y=value)) +   geom_line(aes(color=name))"},{"path":"https://tinashemtapera.github.io/HINF5300/articles/assignment1.html","id":"calculate-the-magnitude-of-acceleration","dir":"Articles","previous_headings":"","what":"Calculate the Magnitude of Acceleration","title":"Assignment 1: Step Detection","text":"combine signal different axes, calculate magnitude combined vectors.","code":"acc <-   acc %>%   mutate(mag = sqrt((X^2 + Y^2 + Z^2)))  acc %>%   slice(2000:4000) %>%   pivot_longer(-timestamp) %>%   ggplot(aes(x=timestamp, y=value)) +   geom_line(aes(color=name)) +   gghighlight(name == \"mag\") #> label_key: name"},{"path":"https://tinashemtapera.github.io/HINF5300/articles/assignment1.html","id":"time-domain-smoothing","dir":"Articles","previous_headings":"","what":"Time Domain Smoothing","title":"Assignment 1: Step Detection","text":"can try number time domain smoothing techniques remove noise.","code":""},{"path":"https://tinashemtapera.github.io/HINF5300/articles/assignment1.html","id":"moving-average-filter","dir":"Articles","previous_headings":"Time Domain Smoothing","what":"Moving Average filter","title":"Assignment 1: Step Detection","text":"use moving average filter zoo package number different window sizes.  great, can look smoothing methods .","code":"window_sizes <- c(5, 10, 20, 50) column_names <- paste0(\"window_size_\", window_sizes, sep=\"\")  acc %>%   slice(2000:4000) %>%   bind_cols({          vec <- pull(., mag)          purrr::map_dfc(window_sizes, ~ zoo::rollmean(vec, .x, fill=NA)) %>%       setNames(column_names)        }) %>%   select(timestamp, matches(\"mag|window\")) %>%   pivot_and_plot(timestamp) +   gghighlight(str_detect(name, \"window\")) +   facet_wrap(~name)"},{"path":"https://tinashemtapera.github.io/HINF5300/articles/assignment1.html","id":"ewma","dir":"Articles","previous_headings":"Time Domain Smoothing","what":"EWMA","title":"Assignment 1: Step Detection","text":"’s exponentially weighted moving average:","code":"window_sizes <- c(5, 10, 20, 50) column_names <- paste0(\"window_size_\", window_sizes, sep=\"\")  acc %>%   slice(2000:4000) %>%   bind_cols({          vec <- pull(., mag)          purrr::map_dfc(window_sizes, ~ pracma::movavg(vec, .x, type=\"e\")) %>%       setNames(column_names)        }) %>%   select(timestamp, matches(\"mag|window\")) %>%   pivot_and_plot(timestamp) +   gghighlight(str_detect(name, \"window\")) +   facet_wrap(~name) #> New names: #> • `` -> `...1` #> • `` -> `...2` #> • `` -> `...3` #> • `` -> `...4` #> Warning: Tried to calculate with group_by(), but the calculation failed. #> Falling back to ungrouped filter operation... #> label_key: name"},{"path":"https://tinashemtapera.github.io/HINF5300/articles/assignment1.html","id":"median-filter","dir":"Articles","previous_headings":"Time Domain Smoothing","what":"Median Filter","title":"Assignment 1: Step Detection","text":"Lastly, ’ll try median filter  methods aren’t fantastic job, can keep trying frequency domain","code":"window_sizes <- c(5, 12, 19, 51) column_names <- paste0(\"window_size_\", window_sizes, sep=\"\")  acc %>%   slice(2000:3000) %>%   bind_cols({          vec <- pull(., mag)          purrr::map_dfc(window_sizes, ~ zoo::rollmedian(vec, .x, fill=NA)) %>%       setNames(column_names)        }) %>%   select(timestamp, matches(\"mag|window\")) %>%   pivot_and_plot(timestamp) +   gghighlight(str_detect(name, \"window\")) +   facet_wrap(~name)"},{"path":"https://tinashemtapera.github.io/HINF5300/articles/assignment1.html","id":"frequency-domain-data","dir":"Articles","previous_headings":"","what":"Frequency Domain Data","title":"Assignment 1: Step Detection","text":"can use stats::fft function convert frequency domain:  ’re seeing high amplitudes noise high low frequencies. can implement filter get rid slow peaks jumpy peaks.  signal looks better. smooth …  can see smoothing effective. ’ll wrap function.","code":"freq <- acc %>%   slice(2000:4000) %>%   pull(mag) %>%   stats::fft()  Mod(freq) %>%   plot(type=\"l\") cutoff <- c(0.8, 3.5) b_filt <- signal::butter(   3,    c(     cutoff[1] / ( 0.5 * sampling_rate ),     cutoff[2] / ( 0.5 * sampling_rate )),   type=\"pass\")  acc %>%   slice(2000:3000) %>%   mutate(filtered = signal::filter(b_filt, mag)) %>%   select(timestamp, mag, filtered) %>%   pivot_and_plot(timestamp) +   gghighlight(name == \"filtered\") acc %>%   slice(2000:3000) %>%   mutate(filtered = signal::filter(b_filt, mag)) -> acc_filtered window_sizes <- c(5, 12, 19, 51) column_names <- paste0(\"window_size_\", window_sizes, sep=\"\")  acc_filtered %>%   bind_cols({          vec <- pull(., filtered)          purrr::map_dfc(window_sizes, ~ zoo::rollmedian(vec, .x, fill=NA)) %>%       setNames(column_names)        }) %>%   select(timestamp, matches(\"filtered|window\")) %>%   pivot_and_plot(timestamp) +   gghighlight(str_detect(name, \"window\")) +   facet_wrap(~name)"},{"path":"https://tinashemtapera.github.io/HINF5300/articles/assignment1.html","id":"a-pipeline-for-data-cleaning","dir":"Articles","previous_headings":"","what":"A Pipeline for Data Cleaning","title":"Assignment 1: Step Detection","text":"use two wrapper functions processes:","code":"acc %>%   mutate(clean_signal = mag %>%            filter_signal() %>%             smooth_signal()) %>%   head(20) #> # A tibble: 20 × 6 #>    timestamp                 X     Y      Z   mag clean_signal #>    <dttm>                <dbl> <dbl>  <dbl> <dbl>        <dbl> #>  1 2022-09-22 00:38:26  0.736  -3.71  -9.57 10.3        NA     #>  2 2022-09-22 00:38:26  0.865  -3.38  -9.50 10.1        NA     #>  3 2022-09-22 00:38:26  0.969  -3.04  -9.46  9.98        0.117 #>  4 2022-09-22 00:38:26  0.875  -3.15  -9.34  9.90        0.271 #>  5 2022-09-22 00:38:26  0.899  -3.37  -9.24  9.88        0.503 #>  6 2022-09-22 00:38:26  0.767  -3.53  -9.01  9.70        0.809 #>  7 2022-09-22 00:38:26  0.623  -3.60  -8.77  9.50        1.18  #>  8 2022-09-22 00:38:26  0.650  -3.77  -8.78  9.57        1.59  #>  9 2022-09-22 00:38:26  0.994  -4.41  -8.58  9.69        2.02  #> 10 2022-09-22 00:38:26  0.426  -4.60  -8.20  9.42        2.46  #> 11 2022-09-22 00:38:26 -0.0633 -4.19  -7.86  8.91        2.87  #> 12 2022-09-22 00:38:26 -0.407  -3.65  -8.42  9.19        3.23  #> 13 2022-09-22 00:38:26 -0.644  -3.44  -8.48  9.18        3.52  #> 14 2022-09-22 00:38:26 -0.475  -3.28  -8.51  9.14        3.74  #> 15 2022-09-22 00:38:26  0.117  -2.97  -8.58  9.08        3.80  #> 16 2022-09-22 00:38:26  0.419  -2.98  -8.99  9.48        3.80  #> 17 2022-09-22 00:38:26 -0.0958 -3.29  -9.60 10.1         3.80  #> 18 2022-09-22 00:38:26 -0.428  -3.00  -9.83 10.3         3.62  #> 19 2022-09-22 00:38:26 -0.528  -2.56  -9.96 10.3         3.35  #> 20 2022-09-22 00:38:26 -0.542  -2.42 -10.2  10.5         3.02"},{"path":"https://tinashemtapera.github.io/HINF5300/articles/assignment1.html","id":"detecting-steps","dir":"Articles","previous_headings":"","what":"Detecting Steps","title":"Assignment 1: Step Detection","text":"Finally, ’s time detect steps.  Let’s try zero crossings grab moments signal goes zero using modelbased: ’s peak detection quantmod:","code":"acc_clean <- acc %>%   mutate(clean_signal = mag %>%            filter_signal(low_pass = 0.1, high_pass = 1.5) %>%             smooth_signal()) %>%   select(timestamp, clean_signal)  acc_clean %>%   slice(2000:3000) %>%   ggplot(aes(x=timestamp, y=clean_signal)) +   geom_line() acc_clean %>%   slice(2000:3000) %>%   summarise(n_steps = modelbased::zero_crossings(clean_signal) %>%               length()) #> # A tibble: 1 × 1 #>   n_steps #>     <int> #> 1      38 acc_clean %>%   slice(2000:3000) %>%   summarise(n_steps = quantmod::findPeaks(clean_signal, thresh = 0) %>%               length()) #> Registered S3 method overwritten by 'quantmod': #>   method            from #>   as.zoo.data.frame zoo #> # A tibble: 1 × 1 #>   n_steps #>     <int> #> 1      19"},{"path":"https://tinashemtapera.github.io/HINF5300/articles/assignment1.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Assignment 1: Step Detection","text":"’s fully-fledged function algorithm: Let’s use algorithm detect steps different scenarios. took ~100 paces phone hand, backpack, pocket (NB: ’re tinkering values ; future directions might try automatically find accurate values programmatically grid search): Interestingly, algorithm always underestimates.","code":"steps_df <- detect_steps(here(\"inst\",\"extdata\", \"acce.csv\")) hand_steps <-    detect_steps(here(\"inst\", \"extdata\", \"hand.csv\"),                low_pass = 0.9,                high_pass = 0.85,                smoothing_window_size = 5,                smoothing_type = \"ewma\",                detection_type = \"zero_crossings\") %>%   summarise(n_steps = sum(!is.na(step)))  pack_steps <-    detect_steps(here(\"inst\", \"extdata\", \"backpack.csv\"),                low_pass = 0.9,                high_pass = 0.85,                smoothing_window_size = 5,                smoothing_type = \"ewma\",                detection_type = \"zero_crossings\") %>%   summarise(n_steps = sum(!is.na(step)))  pocket_steps <-    detect_steps(here(\"inst\", \"extdata\", \"pocket.csv\"),                low_pass = 0.9,                high_pass = 0.85,                smoothing_window_size = 5,                smoothing_type = \"ewma\",                detection_type = \"zero_crossings\") %>%   summarise(n_steps = sum(!is.na(step)))  hand_steps %>%   bind_rows(pack_steps) %>%   bind_rows(pocket_steps) %>%   mutate(Scenario = c(\"In hand\", \"In backpack\", \"In pocket\")) %>%   mutate(datalogger = c(102, 98, 97)) %>%   select(Scenario, `Steps Reported by Datalogger`=datalogger, `Steps Detected` = n_steps) #> # A tibble: 3 × 3 #>   Scenario    `Steps Reported by Datalogger` `Steps Detected` #>   <chr>                                <dbl>            <int> #> 1 In hand                                102               97 #> 2 In backpack                             98               91 #> 3 In pocket                               97               92"},{"path":"https://tinashemtapera.github.io/HINF5300/articles/tryit.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Try it Yourself!","text":"can install package Github using remotes: source files, opening .Rproj file RStudio clicking Install button Build tab.","code":"# install.packages(\"remotes\") # if necessary remotes::install_github(\"TinasheMTapera/HINF5300\")"},{"path":"https://tinashemtapera.github.io/HINF5300/articles/tryit.html","id":"assignment-1","dir":"Articles","previous_headings":"","what":"Assignment 1","title":"Try it Yourself!","text":"can try assignment 1’s step detection algorithm first using Datalogger iOS Android app collect raw accelerometer data. , CSV file machine package installed, simply HINF5300::runExamples(\"assignment1\", <DESIRED OUTPUT DIRECTORY>). pop window ask select data set parameters step detection described notebook. Submitting data produce pretty step detection report . ’s also possible R HINF5300::detect_steps(<FILE>, <PARAMS>) return data frame can plot .","code":""},{"path":"https://tinashemtapera.github.io/HINF5300/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tinashe M. Tapera. Maintainer.","code":""},{"path":"https://tinashemtapera.github.io/HINF5300/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Tapera TM (2022). HINF5300: Code & Assignments HINF5300. R package version 0.1.0, https://tinashemtapera.github.io/HINF5300/.","code":"@Manual{,   title = {HINF5300: Code & Assignments for HINF5300},   author = {Tinashe M. Tapera},   year = {2022},   note = {R package version 0.1.0},   url = {https://tinashemtapera.github.io/HINF5300/}, }"},{"path":"https://tinashemtapera.github.io/HINF5300/index.html","id":"hinf5300","dir":"","previous_headings":"","what":"Code & Assignments for HINF5300","title":"Code & Assignments for HINF5300","text":"package documents code assignments HealthInformatics5300 course Northeastern University. can view website package GitHub detailed instructions details.","code":""},{"path":"https://tinashemtapera.github.io/HINF5300/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Code & Assignments for HINF5300","text":"can install development version HINF5300 GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"TinasheMTapera/HINF5300\")"},{"path":"https://tinashemtapera.github.io/HINF5300/index.html","id":"assignment-1-step-detection","dir":"","previous_headings":"","what":"Assignment 1: Step Detection","title":"Code & Assignments for HINF5300","text":"assignment demonstrating detect steps accelerometer embedded mobile device. notebook assignment located vignette(\"assignment1\") (online), locally (source code located ./vignettes/assignment1.Rmd) Assignment 1 can run quickly R like :","code":"library(HINF5300) library(dplyr) ## basic example code  steps_df <- detect_steps(system.file(\"extdata\", \"acce.csv\", package = \"HINF5300\")) steps_df %>%   summarise(n_steps = sum(!is.na(step))) #> # A tibble: 1 × 1 #>   n_steps #>     <int> #> 1      47"},{"path":"https://tinashemtapera.github.io/HINF5300/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://tinashemtapera.github.io/HINF5300/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://tinashemtapera.github.io/HINF5300/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://tinashemtapera.github.io/HINF5300/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://tinashemtapera.github.io/HINF5300/reference/read_datalogger_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in a CSV of accelerometer data produced by datalogger — read_datalogger_file","title":"Read in a CSV of accelerometer data produced by datalogger — read_datalogger_file","text":"Read CSV accelerometer data produced datalogger","code":""},{"path":"https://tinashemtapera.github.io/HINF5300/reference/read_datalogger_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in a CSV of accelerometer data produced by datalogger — read_datalogger_file","text":"","code":"read_datalogger_file(inputpath)"},{"path":"https://tinashemtapera.github.io/HINF5300/reference/read_datalogger_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in a CSV of accelerometer data produced by datalogger — read_datalogger_file","text":"inputpath path DataLogger input file.","code":""},{"path":"https://tinashemtapera.github.io/HINF5300/reference/read_datalogger_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read in a CSV of accelerometer data produced by datalogger — read_datalogger_file","text":"dataframe accelerometer data.","code":""},{"path":"https://tinashemtapera.github.io/HINF5300/reference/runExample.html","id":null,"dir":"Reference","previous_headings":"","what":"Run an example algorithm from the class — runExample","title":"Run an example algorithm from the class — runExample","text":"Run example algorithm class","code":""},{"path":"https://tinashemtapera.github.io/HINF5300/reference/runExample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run an example algorithm from the class — runExample","text":"","code":"runExample(example)"},{"path":"https://tinashemtapera.github.io/HINF5300/reference/runExample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run an example algorithm from the class — runExample","text":"example example run","code":""}]
